{"version":3,"file":"static/js/294.27b40fa0.chunk.js","mappings":"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","sources":["components/addTaskBtn/addTaskBtn.jsx","components/taskModal/modal/modal.jsx","components/taskForm/taskForm.jsx","components/taskModal/taskModal.jsx","components/taskToolbar/taskToolbar.jsx","components/taskColumnCard/taskColumnCard.jsx","components/tasksColumnList/tasksColumnList.jsx","components/tasksColumnList copy/tasksColumn.jsx","components/columnsTasksList/columnsTasksList.jsx","components/dayCalendarHead/dayCalendarHead.jsx","components/choosedDay/choosedDay.jsx","components/variables/colors.jsx"],"sourcesContent":["import { Button, IconButton, SvgIcon } from '@mui/material';\nimport React from 'react';\nimport Sprite from '../../icons/sprite.svg';\n\nexport default function AddTaskBtn({ btnList = false, openModal, mode }) {\n  if (btnList === true) {\n    return (\n      <Button onClick={openModal} sx={{\n        ...style.btnAdd,\n        backgroundColor: mode === 'light' ? '#3E85F3' : '#E3F3FF',\n        color: mode === 'light' ? '#FFF' : '#111',\n      }}>\n        {' '}\n        <SvgIcon sx={style.iconAdd} stroke={mode === 'light' ? '#FFFFFF' : \"#111111\"}>\n          <use href={`${Sprite}#add`}></use>\n        </SvgIcon>\n        <p>Add task</p>{' '}\n      </Button>\n    );\n  }\n  return (\n    <IconButton onClick={openModal} aria-label=\"delete\" sx={{ color: mode === 'light' ? '#21222C' : '#FFFFFF' }}>\n      <SvgIcon sx={style.iconAdd} stroke={mode === 'light' ? '#FFFFFF' : \"#111111\"}>\n        <use href={`${Sprite}#plus-circle`}></use>\n      </SvgIcon>\n    </IconButton>\n  );\n}\n\nconst style = {\n  iconAdd: {\n    width: { xs: '22px', md: '24px' },\n    height: { xs: '22px', md: '24px' },\n  },\n  btnAdd: {\n    width: '100%',\n    height: '48px',\n    borderRadius: '8px',\n    border: 'dashed #3E85F3 2px',\n    textTransform: 'none',\n    color: '#FFF',\n    textAlign: 'center',\n    fontFamily: 'Inter',\n    fontSize: '14px',\n    fontStyle: 'normal',\n    fontWeight: '600',\n    lineHeight: '18px',\n    display: 'flex',\n    gap: '8px'\n  },\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Box, IconButton, Modal, SvgIcon } from '@mui/material';\nimport Sprite from 'icons/sprite.svg';\nimport { colorsDark, colorsLight } from 'components/variables/colors';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst ModalWrapper = ({ children, closeModal, mode }) => {\n  useEffect(() => {\n    const handleEscape = e => {\n      if (e.code === `Escape`) {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscape);\n    return () => {\n      window.removeEventListener('keydown', handleEscape);\n    };\n  }, [closeModal]);\n\n  const handleClose = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  return createPortal(\n    <Modal open onClose={handleClose} disablePortal>\n      <Box\n        sx={{\n          position: 'absolute',\n          boxShadow: '0px 4px 16px rgba(17, 17, 17, 0.1)',\n          borderRadius: '8px',\n          maxWidth: '95%',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      >\n        <IconButton\n          onClick={closeModal}\n          sx={{\n            position: 'absolute',\n            top: '14px',\n            right: '14px',\n            transition: 'all 250ms',\n            cursor: 'pointner',\n            width: { xs: '20px', md: '24px' },\n            height: { xs: '20px', md: '24px' },\n            padding: 0,\n            color:\n              mode !== 'dark'\n                ? colorsDark.iconColor\n                : colorsLight.mainTextColor,\n          }}\n        >\n          <SvgIcon stroke=\"currentColor\">\n            <use href={`${Sprite}#close`}></use>\n          </SvgIcon>\n        </IconButton>\n        {children}\n      </Box>\n    </Modal>,\n    modalRoot\n  );\n};\n\nexport default ModalWrapper;\n","import { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  Typography,\n  Box,\n  InputBase,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Button,\n  SvgIcon,\n} from '@mui/material';\nimport Sprite from 'icons/sprite.svg';\nimport { colorsDark, colorsLight } from 'components/variables/colors';\nimport { Notify } from 'notiflix';\nimport { addTask, updateTask } from 'redux/tasks/operations';\nimport dayjs from 'dayjs';\n\nconst TaskForm = ({\n  closeModal,\n  date,\n  currentTask,\n  category,\n  editingTask,\n  mode,\n}) => {\n  const defaultTask = {\n    title: '',\n    start: '09:00',\n    end: '09:30',\n    priority: 'low',\n    category,\n    date: dayjs(new Date(date)).format('YYYY-MM-DD'),\n  };\n\n  const [task, setTask] = useState(defaultTask);\n  const [status, setStatus] = useState('create');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (currentTask !== null) {\n      const { _id, status, ...data } = currentTask;\n      if (_id) {\n        setTask(data);\n        setStatus(status);\n      }\n    }\n  }, [currentTask]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setTask(prev => {\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (task.title === '') {\n      Notify.failure('Fill tasks title');\n      return;\n    }\n    if (task.start > task.end) {\n      Notify.failure('Start time must be later than end time');\n      return;\n    } else {\n      if (status === 'edit') {\n        const { _id } = currentTask;\n        dispatch(\n          updateTask({\n            _id,\n            ...task,\n          })\n        );\n      } else {\n        dispatch(addTask(task));\n      }\n    }\n    closeModal();\n  };\n\n  return (\n    <Formik initialValues={defaultTask}>\n      <Form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            padding: { xs: '48px 18px 40px', md: '40px 28px', lg: '40px 28px' },\n          }}\n        >\n          <label>\n            <Typography\n              sx={{\n                color:\n                  mode !== 'dark'\n                    ? colorsDark.labelColor\n                    : colorsLight.secondaryTextColor,\n                fontSize: '12px',\n                fontWeight: '500',\n                lineHeight: '1.16',\n                textAlign: 'start',\n                marginBottom: '8px',\n              }}\n            >\n              Title\n            </Typography>\n            <Field\n              placeholder=\"Enter text\"\n              name=\"title\"\n              type=\"text\"\n              onChange={handleChange}\n              value={task.title}\n              as={InputBase}\n              sx={{\n                width: '100%',\n                fontSize: '14px',\n                fontWeight: 600,\n                color:\n                  mode !== 'dark'\n                    ? colorsDark.popUpInputTextColor\n                    : colorsLight.popUpInputTextColor,\n                border: `1px solid ${\n                  mode !== 'dark'\n                    ? colorsDark.inputBorderColor\n                    : 'rgba(17, 17, 17, 0.15)'\n                } `,\n                borderRadius: '8px',\n                padding: '8px 18px 7px 18px',\n                marginBottom: { xs: '16px', md: '18px', lg: '18px' },\n                backgroundColor:\n                  mode !== 'dark'\n                    ? colorsDark.popUpInputBgrColor\n                    : colorsLight.inputFieldColor,\n              }}\n            />\n          </label>\n          <Box\n            sx={{\n              display: 'flex',\n              gap: '14px',\n              marginBottom: { xs: '16px', md: '28px', lg: '28px' },\n            }}\n          >\n            <Box sx={{ flexGrow: 1 }}>\n              <label>\n                <Typography\n                  sx={{\n                    color:\n                      mode !== 'dark'\n                        ? colorsDark.labelColor\n                        : colorsLight.secondaryTextColor,\n                    fontSize: '12px',\n                    fontWeight: '500',\n                    lineHeight: '1.16',\n                    textAlign: 'start',\n                    marginBottom: '8px',\n                  }}\n                >\n                  Start\n                </Typography>\n                <Field\n                  placeholder=\"Enter text\"\n                  name=\"start\"\n                  value={task.start}\n                  type=\"time\"\n                  onChange={handleChange}\n                  as={InputBase}\n                  sx={{\n                    width: '100%',\n                    fontSize: '14px',\n                    fontWeight: 600,\n                    color:\n                      mode !== 'dark'\n                        ? colorsDark.popUpInputTextColor\n                        : colorsLight.popUpInputTextColor,\n                    fill:\n                      mode !== 'dark'\n                        ? colorsDark.popUpInputTextColor\n                        : colorsLight.popUpInputTextColor,\n                    border: `1px solid ${\n                      mode !== 'dark'\n                        ? colorsDark.inputBorderColor\n                        : 'rgba(17, 17, 17, 0.15)'\n                    } `,\n                    borderRadius: '8px',\n                    padding: '8px 18px 7px 18px',\n                    lineHeight: '1.28',\n                    backgroundColor:\n                      mode !== 'dark'\n                        ? colorsDark.popUpInputBgrColor\n                        : colorsLight.inputFieldColor,\n                  }}\n                />\n              </label>\n            </Box>\n            <Box sx={{ flexGrow: 1 }}>\n              <label>\n                <Typography\n                  sx={{\n                    color:\n                      mode !== 'dark'\n                        ? colorsDark.labelColor\n                        : colorsLight.secondaryTextColor,\n                    fontSize: '12px',\n                    fontWeight: '500',\n                    lineHeight: '1.16',\n                    textAlign: 'start',\n                    marginBottom: '8px',\n                  }}\n                >\n                  End\n                </Typography>\n                <Field\n                  placeholder=\"Enter text\"\n                  name=\"end\"\n                  value={task.end}\n                  type=\"time\"\n                  onChange={handleChange}\n                  as={InputBase}\n                  sx={{\n                    width: '100%',\n                    fontSize: '14px',\n                    fontWeight: 600,\n                    color:\n                      mode !== 'dark'\n                        ? colorsDark.popUpInputTextColor\n                        : colorsLight.popUpInputTextColor,\n                    border: `1px solid ${\n                      mode !== 'dark'\n                        ? colorsDark.inputBorderColor\n                        : 'rgba(17, 17, 17, 0.15)'\n                    } `,\n                    borderRadius: '8px',\n                    padding: '8px 18px 7px 18px',\n                    lineHeight: '1.28',\n                    backgroundColor:\n                      mode !== 'dark'\n                        ? colorsDark.popUpInputBgrColor\n                        : colorsLight.inputFieldColor,\n                  }}\n                />\n              </label>\n            </Box>\n          </Box>\n\n          <RadioGroup\n            onChange={handleChange}\n            value={task.priority}\n            name=\"priority\"\n            sx={{\n              flexDirection: 'row',\n              flexWrap: 'nowrap',\n              justifyContent: 'start',\n              gap: '16px',\n              marginBottom: '32px',\n              height: { xs: '14px', md: '18px', lg: '18px' },\n            }}\n          >\n            <FormControlLabel\n              label=\"Low\"\n              value={'low'}\n              sx={{\n                fontFamily: 'Inter, sans-serif',\n                fontWeight: 600,\n                fontSize: '14px',\n                color:\n                  mode !== 'dark'\n                    ? colorsDark.inputFieldTextColor\n                    : colorsLight.popUpLabelTextColor,\n              }}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskLowColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskLowColor,\n                    },\n                  }}\n                />\n              }\n            />\n            <FormControlLabel\n              label=\"Medium\"\n              value={'medium'}\n              sx={{\n                fontFamily: 'Inter, sans-serif',\n                fontWeight: 600,\n                fontSize: '14px',\n                color:\n                  mode !== 'dark'\n                    ? colorsDark.inputFieldTextColor\n                    : colorsLight.popUpLabelTextColor,\n              }}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskMedColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                      padding: '0px',\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskMedColor,\n                    },\n                  }}\n                />\n              }\n            />\n            <FormControlLabel\n              label=\"High\"\n              value={'high'}\n              sx={{\n                fontFamily: 'Inter, sans-serif',\n                fontWeight: 600,\n                fontSize: '14px',\n                color:\n                  mode !== 'dark'\n                    ? colorsDark.inputFieldTextColor\n                    : colorsLight.popUpLabelTextColor,\n              }}\n              control={\n                <Radio\n                  sx={{\n                    color: colorsLight.taskHighColor,\n                    '& .MuiSvgIcon-root': {\n                      fontSize: 14,\n                    },\n                    '&.Mui-checked': {\n                      color: colorsLight.taskHighColor,\n                    },\n                  }}\n                />\n              }\n            />\n          </RadioGroup>\n\n          <Box\n            sx={{\n              height: { xs: '42px', md: '48px', lg: '48px' },\n              display: 'flex',\n              gap: '14px',\n            }}\n          >\n            {!editingTask ? (\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                sx={{\n                  height: '100%',\n                  flexGrow: '1',\n                  backgroundColor: colorsLight.accentBackgroundColor,\n                  boxShadow: 'none',\n                  gap: '8px',\n                  borderRadius: '8px',\n                  textTransform: 'none',\n                  fontFamily: 'Inter, sans-serif',\n                  fontWeight: 600,\n                  fontSize: '14px',\n                }}\n              >\n                <SvgIcon\n                  stroke=\"currentColor\"\n                  sx={{\n                    width: { xs: '18px', md: '20px', lg: '20px' },\n                    height: { xs: '18px', md: '20px', lg: '20px' },\n                    fill: '#3E85F3;',\n                  }}\n                >\n                  <use href={`${Sprite}#add`}></use>\n                </SvgIcon>\n                Add\n              </Button>\n            ) : (\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                sx={{\n                  height: '100%',\n                  flexGrow: '1',\n                  backgroundColor: colorsLight.accentBackgroundColor,\n                  boxShadow: 'none',\n                  gap: '8px',\n                  borderRadius: '8px',\n                  textTransform: 'none',\n                  fontFamily: 'Inter, sans-serif',\n                  fontWeight: 600,\n                  fontSize: '14px',\n                }}\n              >\n                <SvgIcon\n                  stroke=\"currentColor\"\n                  sx={{\n                    width: { xs: '18px', md: '20px', lg: '20px' },\n                    height: { xs: '18px', md: '20px', lg: '20px' },\n                    fill: '#3E85F3;',\n                  }}\n                >\n                  <use href={`${Sprite}#pencil`}></use>\n                </SvgIcon>\n                Edit\n              </Button>\n            )}\n\n            <Button\n              variant=\"contained\"\n              onClick={closeModal}\n              sx={{\n                height: '100%',\n                width: '144px',\n                borderRadius: '8px',\n                backgroundColor: colorsLight.taskCancelColor,\n                color: colorsLight.mainTextColor,\n                boxShadow: 'none',\n                textTransform: 'none',\n                fontFamily: 'Inter, sans-serif',\n                fontWeight: 600,\n                fontSize: '14px',\n              }}\n            >\n              Cancel\n            </Button>\n          </Box>\n        </Box>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default TaskForm;\n","import { Box } from '@mui/material';\nimport ModalWrapper from 'components/taskModal/modal/modal';\nimport TaskForm from 'components/taskForm/taskForm';\nimport { colorsDark, colorsLight } from 'components/variables/colors';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst TaskModal = ({\n  closeModal,\n  currentTask,\n  date,\n  category,\n  editingTask,\n  mode,\n}) => {\n  const [data, setData] = useState(null);\n  const { currentDay } = useParams();\n\n  useEffect(() => {\n    const { _id } = currentTask;\n    if (_id) {\n      setData({ ...currentTask, status: 'edit' });\n    } else if (category) {\n      setData({\n        title: '',\n        date: currentDay,\n        start: '00:00',\n        end: '00:00',\n        priority: 'low',\n        category,\n        statusOperation: 'create',\n      });\n    } else {\n      closeModal();\n    }\n  }, [closeModal, currentTask, currentDay, category]);\n\n  return (\n    <ModalWrapper closeModal={closeModal} mode={mode}>\n      <Box\n        sx={{\n          borderRadius: '8px',\n          border: mode === 'dark' && '1px solid rgba(220, 227, 229, 0.8)',\n          boxShadow:\n            mode !== 'dark'\n              ? '0px 4px 57px 0px rgba(17, 17, 17, 0.05)'\n              : '0px 4px 16px rgba(17, 17, 17, 0.1)',\n          backgroundColor:\n            mode !== 'dark'\n              ? colorsDark.popUpBackGroundColor\n              : colorsLight.mainBackgroundColor,\n          width: { xs: '100%', md: '396px', lg: '396px' },\n          height: { xs: '100%', md: '360px', lg: '360px' },\n          padding: 0,\n        }}\n      >\n        <TaskForm\n          date={date}\n          category={category ? category : 'to-do'}\n          currentTask={data}\n          closeModal={closeModal}\n          editingTask={editingTask}\n          mode={mode}\n        />\n      </Box>\n    </ModalWrapper>\n  );\n};\n\nexport default TaskModal;\n","import { Box, IconButton, List, ListItem, SvgIcon } from '@mui/material';\nimport React, { useState } from 'react';\nimport Sprite from '../../icons/sprite.svg';\nimport { useDispatch } from 'react-redux';\nimport { deleteTask, updateTask } from 'redux/tasks/operations';\nimport TaskModal from 'components/taskModal/taskModal';\n\nfunction MiniModal({ todo, mode }) {\n  const dispatch = useDispatch();\n\n  return (\n    <Box\n      sx={{\n        ...style.miniModal,\n        backgroundColor: mode === 'light' ? '#171820' : '#FFFFFF',\n        boxShadow:\n          mode === 'light'\n            ? '0px 4px 16px 0px rgba(17, 17, 17, 0.10)'\n            : '0px 4px 16px 0px rgba(17, 17, 17, 0.10)',\n        border:\n          mode === 'light' ? '1px solid rgba(255, 255, 255, 0.15)' : 'none',\n      }}\n      id={'modal'}\n    >\n      <Box\n        sx={{\n          ...style.btnMiniModal,\n          display: todo.category === 'to-do' ? 'none' : 'flex',\n          color: mode === 'light' ? 'white' : 'black',\n        }}\n        onClick={() => dispatch(updateTask({ ...todo, category: 'to-do' }))}\n      >\n        To do\n        <SvgIcon\n          sx={style.iconButton}\n          stroke={mode === 'light' ? '#FFFFFF' : '#111111'}\n        >\n          <use href={`${Sprite}#arrow-circle`}></use>\n        </SvgIcon>\n      </Box>\n      <Box\n        sx={{\n          ...style.btnMiniModal,\n          display: todo.category === 'in-progress' ? 'none' : 'flex',\n          color: mode === 'light' ? 'white' : 'black',\n        }}\n        onClick={() =>\n          dispatch(updateTask({ ...todo, category: 'in-progress' }))\n        }\n      >\n        In progress\n        <SvgIcon\n          sx={style.iconButton}\n          stroke={mode === 'light' ? '#FFFFFF' : '#111111'}\n        >\n          <use href={`${Sprite}#arrow-circle`}></use>\n        </SvgIcon>\n      </Box>\n      <Box\n        sx={{\n          ...style.btnMiniModal,\n          display: todo.category === 'done' ? 'none' : 'flex',\n          color: mode === 'light' ? 'white' : 'black',\n        }}\n        onClick={() => dispatch(updateTask({ ...todo, category: 'done' }))}\n      >\n        Done\n        <SvgIcon\n          sx={style.iconButton}\n          stroke={mode === 'light' ? '#FFFFFF' : '#111111'}\n        >\n          <use href={`${Sprite}#arrow-circle`}></use>\n        </SvgIcon>\n      </Box>\n    </Box>\n  );\n}\n\nexport default function TaskToolbar({ todo, mode }) {\n  const dispatch = useDispatch();\n  const [isOpen, setIsOpen] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [editingTask, setEditingTask] = useState(false);\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const openModal = () => {\n    setShowModal(true);\n    setEditingTask(true);\n  };\n\n  return (\n    <List sx={style.taskMenu}>\n      <ListItem\n        sx={{ padding: '0', position: { xs: 'static', md: 'relative' } }}\n      >\n        <IconButton\n          aria-label=\"drag\"\n          sx={style.btnMenu}\n          onClick={() => setIsOpen(isOpen => !isOpen)}\n        >\n          <SvgIcon\n            sx={{\n              ...style.iconButton,\n              stroke:\n                isOpen === true\n                  ? '#3E85F3'\n                  : mode === 'light'\n                  ? '#FFFFFF'\n                  : '#111111',\n            }}\n          >\n            <use href={`${Sprite}#arrow-circle`}></use>\n          </SvgIcon>\n        </IconButton>\n        {isOpen && <MiniModal todo={todo} mode={mode} />}\n      </ListItem>\n\n      <ListItem sx={{ padding: '0' }}>\n        <IconButton aria-label=\"edit\" sx={style.btnMenu} onClick={openModal}>\n          <SvgIcon\n            sx={style.iconButton}\n            stroke={mode === 'light' ? '#FFFFFF' : '#111111'}\n          >\n            <use href={`${Sprite}#pencil`}></use>\n          </SvgIcon>\n        </IconButton>\n        {showModal && (\n          <TaskModal\n            currentTask={todo}\n            closeModal={closeModal}\n            editingTask={editingTask}\n            mode={mode}\n          />\n        )}\n      </ListItem>\n\n      <ListItem sx={{ padding: '0' }}>\n        <IconButton\n          aria-label=\"delete\"\n          sx={style.btnMenu}\n          onClick={() => dispatch(deleteTask(todo._id))}\n        >\n          <SvgIcon\n            sx={style.iconButton}\n            stroke={mode === 'light' ? '#FFFFFF' : '#111111'}\n          >\n            <use href={`${Sprite}#trash`}></use>\n          </SvgIcon>\n        </IconButton>\n      </ListItem>\n    </List>\n  );\n}\n\nconst style = {\n  taskMenu: {\n    maxWidth: 360,\n    display: 'flex',\n    padding: '0',\n    gap: '10px',\n  },\n  btnMenu: {\n    padding: '0',\n    '&:hover, &:focus': {\n      '& svg': {\n        stroke: '#3E85F3',\n      },\n    },\n  },\n  iconButton: {\n    width: { xs: '14px', md: '16px' },\n    height: { xs: '14px', md: '16px' },\n    color: 'transparent',\n  },\n  miniModal: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '14px',\n    position: 'absolute',\n    left: {\n      xs: '-38px',\n      md: '-64px',\n    },\n    bottom: '-10px',\n    padding: {\n      xs: '14px',\n      md: '20px 24px',\n    },\n    boxSizing: 'border-box',\n    width: {\n      xs: '115px',\n      md: '148px',\n    },\n    height: {\n      xs: '70px',\n      md: '90px',\n    },\n    bgcolor: '#FFFFFF',\n    borderRadius: '8px',\n    transform: 'translateY(100%)',\n    zIndex: '1000',\n  },\n  btnMiniModal: {\n    height: {\n      xs: '14px',\n      md: '18px',\n    },\n    color: '#343434',\n    fontSize: '14px',\n    fontFamily: 'Inter',\n    fontStyle: 'normal',\n    fontWeight: '500',\n    lineHeight: '18px',\n\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    '&:hover, &:focus': {\n      color: ' #3E85F3',\n      '& svg': {\n        stroke: '#3E85F3',\n      },\n      cursor: 'pointer',\n    },\n  },\n};\n","import { Avatar, Box, Typography } from '@mui/material';\nimport TaskToolbar from 'components/taskToolbar/taskToolbar';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\n\nexport default function TaskColumnCard({ todo, mode }) {\n  const userState = useSelector(selectUser);\n\n  return (\n    <Box\n      sx={{\n        ...style.taskBox,\n        bgcolor: mode === 'light' ? '#171820' : '#F7F6F9',\n      }}\n    >\n      <Typography\n        sx={{ ...style.text, color: mode === 'light' ? '#FFF' : '#111111' }}\n      >\n        {todo.title}\n      </Typography>\n      <Box sx={style.flexBox}>\n        <Box sx={style.avatarBox}>\n          <Avatar src={userState.avatarURL || ''} sx={style.avatar} />\n\n          <Box\n            sx={{\n              ...style.priorityLabel,\n              backgroundColor:\n                todo.priority === 'low'\n                  ? '#72C2F8'\n                  : todo.priority === 'medium'\n                  ? '#F3B249'\n                  : '#EA3D65',\n            }}\n          >\n            {todo.priority}\n          </Box>\n        </Box>\n        <TaskToolbar todo={todo} mode={mode} />\n      </Box>\n    </Box>\n  );\n}\n\nconst style = {\n  flexBox: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  },\n  text: {\n    textOverflow: 'ellipsis',\n    width: '100%',\n    whiteSpace: 'nowrap',\n    marginBottom: '28px',\n    overflow: 'hidden',\n    color: '#FFF',\n    whitespace: 'nowrap',\n    fontFamily: 'Inter',\n    fontSize: '14px',\n    fontStyle: 'normal',\n    fontWeight: '500',\n    lineHeight: '18px',\n  },\n  taskBox: {\n    padding: '15px',\n    boxSizing: 'border-box',\n    bgcolor: '#F7F6F9',\n    minWidth: '100%',\n    maxWidth: '100%',\n    borderRadius: '8px',\n    position: 'relative',\n  },\n  avatarBox: {\n    display: 'flex',\n    gap: '10px',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-end',\n  },\n  avatar: {\n    border: '1.8px solid #3E85F3',\n    width: { xs: '32px', md: '44px' },\n    height: { xs: '32px', md: '44px' },\n  },\n  priorityLabel: {\n    paddingInline: '15px',\n    height: '20px',\n    borderRadius: '4px',\n    lineHeight: '1.2',\n    fontSize: '10px',\n    color: '#F7F6F9',\n    display: 'flex',\n    alignItems: 'center',\n  },\n};\n","import { List, ListItem } from '@mui/material'\nimport TaskColumnCard from 'components/taskColumnCard/taskColumnCard'\nimport React from 'react'\n\nexport default function TasksColumnList({ todos, mode }) {\n\n    const listSetts = {\n        marginBottom: '',\n    }\n    if (todos.length === 0) { listSetts.marginBottom = '0px' }\n    else { listSetts.marginBottom = '32px'}\n\n\n    return (\n        <List sx={{ ...style.list, ...listSetts}}>\n            {todos.map(todo =>\n                <ListItem key={todo._id} sx={style.item}>\n                    <TaskColumnCard todo={todo} mode={mode}/>\n                </ListItem>\n            )}\n        </List>\n    )\n}\n\nconst style = {\n    list: {\n        boxSizing: 'border-box',\n\n        display: 'flex',\n        width: '100%',\n        maxHeight: '400px',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n\n        gap: '18px',\n\n        padding: '0',\n        paddingInline: '21px',\n        overflowY: 'auto', \n    },\n    item: {\n        padding: '0',\n        '&:last-child': {\n            marginBottom: {xs: '28px', md: 0}\n        },\n        '&:last-child #modal': {\n            top: 0,\n            transform: 'translateY(-110%)'\n        },\n    },\n}\n\n\n\n\n","import { Box, Typography } from '@mui/material';\nimport AddTaskBtn from 'components/addTaskBtn/addTaskBtn';\nimport { useState } from 'react';\nimport TasksColumnList from 'components/tasksColumnList/tasksColumnList';\nimport React from 'react';\nimport TaskModal from 'components/taskModal/taskModal';\n\nexport default function TasksColumn({ title, todos, date, category, mode }) {\n  const [showModal, setShowModal] = useState(false);\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const panelSetts = {\n    marginBottom: '28px',\n  };\n  if (todos.length === 0) {\n    panelSetts.marginBottom = { xs: '64px', md: '28px' };\n  } else {\n    panelSetts.marginBottom = '28px';\n  }\n\n  return (\n    <Box\n      sx={{\n        ...style.listTodos,\n        bgcolor: mode === 'light' ? '#21222C' : '#FFFFFF',\n      }}\n    >\n      <Box sx={{ ...style.addPanel, ...panelSetts }}>\n        <Typography\n          sx={{ ...style.titleText, color: mode === 'light' ? '#FFF' : '#111' }}\n        >\n          {title}\n        </Typography>\n        <AddTaskBtn openModal={openModal} mode={mode} />\n      </Box>\n\n      <TasksColumnList todos={todos} mode={mode} />\n\n      <Box sx={style.btnAdd}>\n        <AddTaskBtn btnList openModal={openModal} mode={mode} />\n      </Box>\n      {showModal && (\n        <TaskModal\n          currentTask={todos}\n          date={date}\n          category={category}\n          closeModal={closeModal}\n          mode={mode}\n        />\n      )}\n    </Box>\n  );\n}\n\nconst style = {\n  btnAdd: {\n    width: {\n      xs: 'calc(100% - 36px)',\n      md: '100%',\n    },\n    position: {\n      xs: 'absolute',\n      md: 'static',\n    },\n    bottom: '10px',\n    left: '18px',\n    boxSizing: 'border-box',\n    paddingInline: {\n      md: '21px',\n    },\n  },\n  addPanel: {\n    paddingInline: '21px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '28px',\n  },\n  listTodos: {\n    boxSizing: 'border-box',\n    mt: '15px',\n    maxWidth: {\n      xs: 'calc(100%)',\n      md: 'calc((100% - 16px) / 2)',\n      lg: 'calc((100% - 54px) / 3)',\n    },\n    minWidth: {\n      xs: 'calc(100%)',\n      md: 'calc((100% - 16px) / 2)',\n      lg: 'calc((100% - 54px) / 3)',\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    height: '100%',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '8px',\n    scrollSnapAlign: 'center',\n    alignItems: 'space-between',\n    position: 'relative',\n    padding: '18px 0 22px 0',\n  },\n  titleText: {\n    color: ' #111',\n    textAlign: 'center',\n    fontFamily: 'Inter',\n    fontSize: '20px',\n    fontStyle: 'normal',\n    fontWeight: '700',\n    lineHeight: ' 24px',\n  },\n};\n","import { Box } from '@mui/material'\nimport TasksColumn from 'components/tasksColumnList copy/tasksColumn'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectTasks } from 'redux/tasks/selectors'\n\nexport default function ColumnsTasksList({ value, weekend, mode }) {\n  const { tasks } = useSelector(selectTasks);\n  const day = new Date(weekend[value].date).getDate();\n  const dateTask = new Date(weekend[value].date)\n  if (!tasks) {\n    return\n  }\n\n  const dayTasks = tasks.filter(({ date }) => new Date(date).getDate() === day)\n\n  return (\n    <Box sx={style.taskPanel}>\n      <TasksColumn title={'To do'} category={'to-do'} date={dateTask} mode={mode} todos={dayTasks.filter(({ category }) => category === \"to-do\")} />\n      <TasksColumn title={'In progress'} category={'in-progress'} date={dateTask} mode={mode} todos={dayTasks.filter(({ category }) => category === \"in-progress\")} />\n      <TasksColumn title={'Done'} category={'done'} date={dateTask} mode={mode} todos={dayTasks.filter(({ category }) => category === \"done\")} />\n    </Box>\n  )\n}\n\nconst style = {\n\n  taskPanel: {\n    scrollbarColor: 'black',\n    display: 'flex  ',\n    overflowX: {\n      xs: 'scroll',\n      mb: 'scroll',\n      lg: 'auto',\n    },\n    scrollSnapType: 'x mandatory',\n    width: {\n      xs: 'calc(100vw - 40px)',\n      md: 'calc(100vw - 64px)',\n      lg: 'calc(100%)',\n    },\n    gap: {\n      xs: '20px',\n      md: '16px',\n      lg: '27px'\n    },\n    boxSizing: 'border-box',\n\n    paddingBottom: '46px',\n\n    maxHeight: {\n      md: '100%',\n      lg: '100%'\n    },\n  }\n}","import { Box, Tab, Tabs } from '@mui/material'\nimport dayjs from 'dayjs'\nimport React from 'react'\nimport weekday from 'dayjs/plugin/weekday'\ndayjs.extend(weekday)\n\nexport default function DayCalendarHead({ value, handleChange, weekend, mode }) {\n\n    return (\n        <>\n            <Tabs\n                value={value}\n                onChange={handleChange}\n                aria-label=\"basic tabs example\"\n                sx={{ ...style.weekIconList, bgcolor: mode === 'light' ? '#21222C' : '#FFFFFF' }}>\n                {\n                    weekend.map(({ day, weekDay, weekDayMob }) =>\n                        <Tab key={weekDay}\n                            sx={{ ...style.iconDayTask }}\n                            icon={\n                                <Box sx={{ ...style.dayTitle }}>\n                                    <Box sx={{ ...style.desk, color: mode === 'light' ? '#FAFAFA30' : '#343434' }}>{weekDay}</Box>\n                                    <Box sx={{ ...style.mobile, color: mode === 'light' ? '#FAFAFA30' : '#343434' }}>{weekDayMob}</Box>\n                                    <Box className='numberDay' color={mode === 'light' ? '#FFFFFF' : '#343434'} >{day}</Box>\n                                </Box>}\n                        />\n                    )\n                }\n            </Tabs>\n        </>\n    )\n}\n\nconst style = {\n\n    iconDayTask: {\n        paddingInline: '0',\n        '&.Mui-selected': {\n            color: '#343434',\n            border: 'none'\n        },\n        '& .numberDay': {\n            width: '20px',\n            height: '20px',\n            marginTop: '6px',\n\n        },\n        '&.Mui-selected .numberDay': {\n            backgroundColor: '#3E85F3',\n            borderRadius: '6px',\n            color: '#FFFFFF',\n\n        },\n        '&': {\n            width: 'calc(100% / 7)'\n        },\n        '& span': {\n            display: 'none',\n            color: '#3E85F3'\n        },\n    },\n    dayTitle: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontFamily: 'Inter',\n    },\n    desk: {\n        display: {\n            xs: 'none',\n            md: 'block'\n        }\n    },\n    mobile: {\n        display: {\n            md: 'none'\n        }\n    },\n    weekIconList: {\n        '.MuiTabs-indicator': {\n            display: 'none'\n        },\n        '.MuiButtonBase-root': {\n            minWidth: {\n                xs: 'calc(100%/7)',\n                md: 'calc((100% - 64px) / 7)',\n            },\n            boxSizing: 'border-box',\n        },\n        bgcolor: '#FFFFFF',\n        borderRadius: '8px',\n        boxSizing: 'border-box',\n        width: '100%'\n    }\n}","import { Box } from '@mui/material';\nimport ColumnsTasksList from 'components/columnsTasksList/columnsTasksList';\nimport DayCalendarHead from 'components/dayCalendarHead/dayCalendarHead';\nimport dayjs from 'dayjs';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getWeekTasks } from 'redux/tasks/operations';\n\nexport default function ChoosedDay({ mode }) {\n  const params = useParams()\n  const [day, setDay] = useState(() => params.day);\n  const [value, setValue] = React.useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [weekYear, setWeekYear] = useState(null);\n\n  useEffect(() => {\n    if (day !== params.day) {\n      setDay(params.day)\n    }\n\n  }, [day, params.day])\n\n  const weekend = useMemo(() => {\n    const arr = [];\n    let i = 0;\n    let y = 7;\n\n    if (dayjs(day).weekday() === 0) {\n      i = -7;\n      y = 0;\n    }\n    let e = 0;\n    for (i; i < y; i++) {\n      const test = dayjs(day).weekday(i + 1);\n\n      arr[e] = {\n        day: test.$D,\n        weekDay: String(test.$d).slice(0, 3),\n        weekDayMob: String(test.$d).slice(0, 1),\n        date: test.$d,\n        dayFormat: dayjs(test.$d).format('YYYY-MM-DD')\n      };\n      e++;\n    }\n    return arr;\n  }, [day]);\n\n  function addZero(num) {\n    if (num < 10) {\n      return `0${num}`;\n    }\n    return num;\n  }\n\n  useEffect(() => {\n    if (weekend) {\n      const index = weekend.findIndex(({ dayFormat }) =>\n        dayFormat === day\n      );\n\n      setValue(index)\n    }\n  }, [day, weekend])\n\n  useEffect(() => {\n    if (value === null) {\n      setValue(dayjs(day).day() === 0 ? 6 : dayjs(day).day() - 1);\n    }\n  }, [day, value]);\n\n  useEffect(() => {\n    const currentWeek = dayjs(weekend[0].dayFormat).week();\n\n    if (weekend[0] && currentWeek !== weekYear) {\n      dispatch(\n        getWeekTasks({\n          years: new Date(weekend[0].date).getFullYear(),\n          month: addZero(new Date(weekend[0].date).getMonth() + 1),\n          day: addZero(new Date(weekend[0].date).getDate()),\n        })\n      );\n      setWeekYear(currentWeek)\n    }\n  }, [dispatch, weekYear, weekend]);\n\n  const handleChange = (e, newValue) => {\n    setValue(newValue);\n    navigate(`/main/calendar/day/${weekend[newValue].dayFormat}`)\n  };\n\n\n  if (!day) { return }\n  if (value === null || !weekend) { return }\n\n  return (\n    <Box sx={style.boxDay}>\n      <Box sx={{ boxSizing: 'border-box' }}>\n        <Box sx={{ borderColor: 'divider' }}>\n          <DayCalendarHead\n            value={value}\n            weekend={weekend}\n            mode={mode}\n            handleChange={handleChange}\n          />\n        </Box>\n      </Box>\n      <ColumnsTasksList weekend={weekend} mode={mode} value={value} />\n    </Box>\n  );\n}\n\nconst style = {\n  boxDay: {\n    width: {\n      xs: '100%',\n      md: 'calc(100vw - 64px)',\n      lg: 'calc(100%)',\n    },\n    height: {\n      xs: 'calc(100vh - 64px - 38px)',\n      md: 'calc(100vh - 64px - 40px)',\n      lg: 'calc(100%)'\n    },\n    margin: '0',\n    mt: '-10px'\n  },\n};\n","const colorsLight = {\n    /* text */\n    mainTextColor: '#111111',\n    secondaryTextColor: '#616161',\n    accentTextColor: '#3e85f3',\n    activeSelectionColor: '#e3f3ff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#84828a',\n    calendarDateColor: '#343434',\n    calendarCellColor: '#FFFFFF',\n    accentColor: '#3e85f3',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#FFFFFF',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#FFFFFF',\n    popUpInputTextColor: '#616161',\n    popUpLabelTextColor: '#343434CC',\n    popUpInputBgrColor: '#F6F6F6',\n\n    /* backgroung */\n    mainBackgroundColor: '#ffffff',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#f7f6f9',\n    sidebarBackgroundColor: '#ffffff',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#DCE3E5CC',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#dce3e5cc',\n    inputFieldColor: '#f6f6f6',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#616161',\n    iconColor: '#3E85F3',\n\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n\n    /* other */\n    scrollbarColor: '#e7e5e5',\n    scrollbarBackgroundColor: '#f2f2f2',\n    frameBorderColor: '#e1e7e9',\n    navTitleColor: '#7E7D82',\n    strPgBackgroundColor: '#FFFFFF',\n};\n\nconst colorsDark = {\n    mainTextColor: '#ffffff',\n    secondaryTextColor: ' #FFFFFF',\n    accentTextColor: '#ffffff',\n    btnTextColor: '#ffffff',\n    inactiveBtnTextColor: '#EFEFEF',\n    activeSelectionColor: '#3e85f3',\n    calendarDateColor: '#ffffff',\n    calendarCellColor: '#21222C',\n    accentColor: '#3e85f3',\n    labelColor: '#FAFAFA4D',\n    iconColor: '#FFFFFF',\n    hoverColor: '#7aaff3',\n    columnBackGroundColor: '#21222C',\n    modalShadow: '#1111111A',\n\n    /* pop-up modal window */\n    popUpBackGroundColor: '#171820',\n    popUpInputTextColor: '#FFFFFF',\n    popUpLabelTextColor: '#FFFFFF',\n    popUpInputBgrColor: '#171820',\n    popUpCancelBtnColor: '#EFEFEF',\n    popUpAddBtnColor: '#3E85F3',\n\n    /* backgroung */\n    mainBackgroundColor: '#21222c',\n    authBackgroundColor: '#dcebf7',\n    outletBackgroundColor: '#171820',\n    sidebarBackgroundColor: '#13151a',\n    accentBackgroundColor: '#3e85f3',\n    modalBorder: '#FFFFFF26',\n\n    /* tasks */\n    taskHighColor: '#ea3d65',\n    taskMedColor: '#f3b249',\n    taskLowColor: '#72c2f8',\n    taskCardColor: '#171820',\n    inputFieldColor: '#171820',\n    taskCancelColor: '#efefef',\n    inputFieldTextColor: '#FFFFFF',\n    inputBorderColor: '#FFFFFF26',\n    placeholderColor: '#DCE3E5',\n    /* calendar */\n    priorityHighColor: '#ffd2dd',\n    priorityMedColor: '#fcf0d4',\n    priorityLowColor: '#ceeefd',\n    /* other */\n    scrollbarColor: '#2d3037',\n    scrollbarBackgroundColor: '#21222c',\n    frameBorderColor: '#42434c',\n};\n\nexport { colorsLight, colorsDark };"],"names":["AddTaskBtn","btnList","openModal","mode","Button","onClick","sx","style","btnAdd","backgroundColor","color","SvgIcon","iconAdd","stroke","href","Sprite","IconButton","width","xs","md","height","borderRadius","border","textTransform","textAlign","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","display","gap","modalRoot","document","querySelector","children","closeModal","useEffect","handleEscape","e","code","window","addEventListener","removeEventListener","createPortal","Modal","open","onClose","target","currentTarget","disablePortal","Box","position","boxShadow","maxWidth","top","left","transform","right","transition","cursor","padding","colorsDark","colorsLight","date","currentTask","category","editingTask","defaultTask","title","start","end","priority","dayjs","Date","format","useState","task","setTask","status","setStatus","dispatch","useDispatch","_id","data","handleChange","name","value","prev","handleSubmit","preventDefault","Notify","updateTask","addTask","initialValues","onSubmit","lg","Typography","marginBottom","placeholder","type","onChange","as","InputBase","flexGrow","fill","RadioGroup","flexDirection","flexWrap","justifyContent","FormControlLabel","label","control","Radio","variant","setData","currentDay","useParams","statusOperation","MiniModal","todo","miniModal","id","btnMiniModal","iconButton","TaskToolbar","isOpen","setIsOpen","showModal","setShowModal","setEditingTask","List","taskMenu","ListItem","btnMenu","deleteTask","bottom","boxSizing","bgcolor","zIndex","alignItems","TaskColumnCard","userState","useSelector","selectUser","taskBox","text","flexBox","avatarBox","Avatar","src","avatarURL","avatar","priorityLabel","textOverflow","whiteSpace","overflow","whitespace","minWidth","paddingInline","TasksColumnList","todos","listSetts","length","list","map","item","maxHeight","overflowY","TasksColumn","panelSetts","listTodos","addPanel","titleText","mt","scrollSnapAlign","ColumnsTasksList","weekend","tasks","selectTasks","day","getDate","dateTask","dayTasks","filter","taskPanel","scrollbarColor","overflowX","mb","scrollSnapType","paddingBottom","DayCalendarHead","Tabs","weekIconList","weekDay","weekDayMob","Tab","iconDayTask","icon","dayTitle","desk","mobile","className","weekday","marginTop","ChoosedDay","params","setDay","React","setValue","navigate","useNavigate","weekYear","setWeekYear","useMemo","arr","i","y","test","$D","String","$d","slice","dayFormat","addZero","num","index","findIndex","currentWeek","week","getWeekTasks","years","getFullYear","month","getMonth","boxDay","borderColor","newValue","margin","mainTextColor","secondaryTextColor","accentTextColor","activeSelectionColor","btnTextColor","inactiveBtnTextColor","calendarDateColor","calendarCellColor","accentColor","hoverColor","columnBackGroundColor","modalShadow","popUpBackGroundColor","popUpInputTextColor","popUpLabelTextColor","popUpInputBgrColor","mainBackgroundColor","authBackgroundColor","outletBackgroundColor","sidebarBackgroundColor","accentBackgroundColor","modalBorder","taskHighColor","taskMedColor","taskLowColor","taskCardColor","inputFieldColor","taskCancelColor","inputFieldTextColor","iconColor","priorityHighColor","priorityMedColor","priorityLowColor","scrollbarBackgroundColor","frameBorderColor","navTitleColor","strPgBackgroundColor","labelColor","popUpCancelBtnColor","popUpAddBtnColor","inputBorderColor","placeholderColor"],"sourceRoot":""}